(function(System, SystemJS) {(function(__moduleName){System.register(['babel-runtime/core-js/object/assign', './appConfig', 'commons/externalServices'], function (_export) {
    var _Object$assign, app, state, _services;

    function Component() {
        var description = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

        return function decorator(target) {
            if (!description.selector) {
                throw new Error('@Component() must contains selector property! ');
            }

            var componentName = description.selector;

            var options = _Object$assign({ controller: target }, description);

            if (description.template) {
                options.template = function ($element) {
                    // all component top element will have a class with their selector on them - this is to use as css starting point in modular css approach
                    $element.addClass(componentName);
                    return description.template;
                };
                options.template.$inject = ['$element'];
            }

            app.component(componentName, options);
        };
    }

    function Inject() {
        for (var _len = arguments.length, dependencies = Array(_len), _key = 0; _key < _len; _key++) {
            dependencies[_key] = arguments[_key];
        }

        return function decorator(target, key, descriptor) {
            // if it's true then we inject dependencies into function and not Class constructor
            if (descriptor) {
                var fn = descriptor.value;
                fn.$inject = dependencies;
            } else {
                target.$inject = dependencies;
            }
        };
    }

    function Service(options) {
        return function decorator(target) {
            options = options ? options : {};
            if (!options.serviceName) {
                throw new Error('@Service() must contains serviceName property!');
            }
            app.service(options.serviceName, target);

            app.run(['$injector', function ($injector) {
                _services[options.serviceName] = $injector.get(options.serviceName);
            }]);

            target.instance = function () {
                return _services[options.serviceName];
            };
        };
    }

    //secure decorator, extend secure constructor (check more redirects)

    return {
        setters: [function (_babelRuntimeCoreJsObjectAssign) {
            _Object$assign = _babelRuntimeCoreJsObjectAssign['default'];
        }, function (_appConfig) {
            app = _appConfig['default'];
        }, function (_commonsExternalServices) {
            state = _commonsExternalServices.state;
        }],
        execute: function () {
            'use strict';

            _services = {};

            _export('Component', Component);

            _export('Inject', Inject);

            _export('Service', Service);
        }
    };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9uZ0RlY29yYXRvcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtvQ0FzQ00sU0FBUzs7QUFuQ2YsYUFBUyxTQUFTLEdBQW1CO1lBQWxCLFdBQVcseURBQUcsRUFBRTs7QUFDL0IsZUFBTyxTQUFTLFNBQVMsQ0FBQyxNQUFNLEVBQUU7QUFDOUIsZ0JBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxFQUFFO0FBQ3ZCLHNCQUFNLElBQUksS0FBSyxDQUFDLGdEQUFnRCxDQUFDLENBQUM7YUFDckU7O0FBRUQsZ0JBQU0sYUFBYSxHQUFHLFdBQVcsQ0FBQyxRQUFRLENBQUM7O0FBRTNDLGdCQUFNLE9BQU8sR0FBRyxlQUFjLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxFQUFFLFdBQVcsQ0FBQyxDQUFDOztBQUVuRSxnQkFBSSxXQUFXLENBQUMsUUFBUSxFQUFFO0FBQ3RCLHVCQUFPLENBQUMsUUFBUSxHQUFHLFVBQVMsUUFBUSxFQUFFOztBQUVsQyw0QkFBUSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUNqQywyQkFBTyxXQUFXLENBQUMsUUFBUSxDQUFDO2lCQUMvQixDQUFDO0FBQ0YsdUJBQU8sQ0FBQyxRQUFRLENBQUMsT0FBTyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7YUFDM0M7O0FBRUQsZUFBRyxDQUFDLFNBQVMsQ0FBQyxhQUFhLEVBQUUsT0FBTyxDQUFDLENBQUM7U0FDekMsQ0FBQztLQUNMOztBQUVELGFBQVMsTUFBTSxHQUFrQjswQ0FBZCxZQUFZO0FBQVosd0JBQVk7OztBQUMzQixlQUFPLFNBQVMsU0FBUyxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsVUFBVSxFQUFFOztBQUUvQyxnQkFBRyxVQUFVLEVBQUU7QUFDWCxvQkFBTSxFQUFFLEdBQUcsVUFBVSxDQUFDLEtBQUssQ0FBQztBQUM1QixrQkFBRSxDQUFDLE9BQU8sR0FBRyxZQUFZLENBQUM7YUFDN0IsTUFBTTtBQUNILHNCQUFNLENBQUMsT0FBTyxHQUFHLFlBQVksQ0FBQzthQUNqQztTQUNKLENBQUM7S0FDTDs7QUFJRCxhQUFTLE9BQU8sQ0FBQyxPQUFPLEVBQUU7QUFDdEIsZUFBTyxTQUFTLFNBQVMsQ0FBQyxNQUFNLEVBQUU7QUFDOUIsbUJBQU8sR0FBRyxPQUFPLEdBQUcsT0FBTyxHQUFHLEVBQUUsQ0FBQztBQUNqQyxnQkFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUU7QUFDdEIsc0JBQU0sSUFBSSxLQUFLLENBQUMsZ0RBQWdELENBQUMsQ0FBQzthQUNyRTtBQUNELGVBQUcsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxNQUFNLENBQUMsQ0FBQzs7QUFFekMsZUFBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFdBQVcsRUFBRSxVQUFDLFNBQVMsRUFBSztBQUNqQyx5QkFBUyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsR0FBRyxTQUFTLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQzthQUN2RSxDQUFDLENBQUMsQ0FBQzs7QUFFSixrQkFBTSxDQUFDLFFBQVEsR0FBRzt1QkFBTSxTQUFTLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQzthQUFBLENBQUM7U0FDMUQsQ0FBQztLQUNMOzs7Ozs7Ozs7OzZDQXJETyxLQUFLOzs7OztBQXFDUCxxQkFBUyxHQUFHLEVBQUU7O2lDQXFCWixTQUFTOzs4QkFBRSxNQUFNOzsrQkFBRSxPQUFPIiwiZmlsZSI6Imh0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9uZ0RlY29yYXRvcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXBwIGZyb20gJy4vYXBwQ29uZmlnJztcbmltcG9ydCB7c3RhdGV9IGZyb20gXCJjb21tb25zL2V4dGVybmFsU2VydmljZXNcIjtcblxuZnVuY3Rpb24gQ29tcG9uZW50KGRlc2NyaXB0aW9uID0ge30pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gZGVjb3JhdG9yKHRhcmdldCkge1xuICAgICAgICBpZiAoIWRlc2NyaXB0aW9uLnNlbGVjdG9yKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0BDb21wb25lbnQoKSBtdXN0IGNvbnRhaW5zIHNlbGVjdG9yIHByb3BlcnR5ISAnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGNvbXBvbmVudE5hbWUgPSBkZXNjcmlwdGlvbi5zZWxlY3RvcjtcblxuICAgICAgICBjb25zdCBvcHRpb25zID0gT2JqZWN0LmFzc2lnbih7IGNvbnRyb2xsZXI6IHRhcmdldCB9LCBkZXNjcmlwdGlvbik7XG5cbiAgICAgICAgaWYgKGRlc2NyaXB0aW9uLnRlbXBsYXRlKSB7XG4gICAgICAgICAgICBvcHRpb25zLnRlbXBsYXRlID0gZnVuY3Rpb24oJGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAvLyBhbGwgY29tcG9uZW50IHRvcCBlbGVtZW50IHdpbGwgaGF2ZSBhIGNsYXNzIHdpdGggdGhlaXIgc2VsZWN0b3Igb24gdGhlbSAtIHRoaXMgaXMgdG8gdXNlIGFzIGNzcyBzdGFydGluZyBwb2ludCBpbiBtb2R1bGFyIGNzcyBhcHByb2FjaFxuICAgICAgICAgICAgICAgICRlbGVtZW50LmFkZENsYXNzKGNvbXBvbmVudE5hbWUpO1xuICAgICAgICAgICAgICAgIHJldHVybiBkZXNjcmlwdGlvbi50ZW1wbGF0ZTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBvcHRpb25zLnRlbXBsYXRlLiRpbmplY3QgPSBbJyRlbGVtZW50J107XG4gICAgICAgIH1cblxuICAgICAgICBhcHAuY29tcG9uZW50KGNvbXBvbmVudE5hbWUsIG9wdGlvbnMpO1xuICAgIH07XG59XG5cbmZ1bmN0aW9uIEluamVjdCguLi5kZXBlbmRlbmNpZXMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gZGVjb3JhdG9yKHRhcmdldCwga2V5LCBkZXNjcmlwdG9yKSB7XG4gICAgICAgIC8vIGlmIGl0J3MgdHJ1ZSB0aGVuIHdlIGluamVjdCBkZXBlbmRlbmNpZXMgaW50byBmdW5jdGlvbiBhbmQgbm90IENsYXNzIGNvbnN0cnVjdG9yXG4gICAgICAgIGlmKGRlc2NyaXB0b3IpIHtcbiAgICAgICAgICAgIGNvbnN0IGZuID0gZGVzY3JpcHRvci52YWx1ZTtcbiAgICAgICAgICAgIGZuLiRpbmplY3QgPSBkZXBlbmRlbmNpZXM7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0YXJnZXQuJGluamVjdCA9IGRlcGVuZGVuY2llcztcbiAgICAgICAgfVxuICAgIH07XG59XG5cbmNvbnN0IF9zZXJ2aWNlcyA9IHt9O1xuXG5mdW5jdGlvbiBTZXJ2aWNlKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gZGVjb3JhdG9yKHRhcmdldCkge1xuICAgICAgICBvcHRpb25zID0gb3B0aW9ucyA/IG9wdGlvbnMgOiB7fTtcbiAgICAgICAgaWYgKCFvcHRpb25zLnNlcnZpY2VOYW1lKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0BTZXJ2aWNlKCkgbXVzdCBjb250YWlucyBzZXJ2aWNlTmFtZSBwcm9wZXJ0eSEnKTtcbiAgICAgICAgfVxuICAgICAgICBhcHAuc2VydmljZShvcHRpb25zLnNlcnZpY2VOYW1lLCB0YXJnZXQpO1xuXG4gICAgICAgIGFwcC5ydW4oWyckaW5qZWN0b3InLCAoJGluamVjdG9yKSA9PiB7XG4gICAgICAgICAgICBfc2VydmljZXNbb3B0aW9ucy5zZXJ2aWNlTmFtZV0gPSAkaW5qZWN0b3IuZ2V0KG9wdGlvbnMuc2VydmljZU5hbWUpO1xuICAgICAgICB9XSk7XG5cbiAgICAgICAgdGFyZ2V0Lmluc3RhbmNlID0gKCkgPT4gX3NlcnZpY2VzW29wdGlvbnMuc2VydmljZU5hbWVdO1xuICAgIH07XG59XG5cbi8vc2VjdXJlIGRlY29yYXRvciwgZXh0ZW5kIHNlY3VyZSBjb25zdHJ1Y3RvciAoY2hlY2sgbW9yZSByZWRpcmVjdHMpXG5cblxuZXhwb3J0IHtDb21wb25lbnQsIEluamVjdCwgU2VydmljZX07Il19
})("http://localhost:8080/ngDecorators.js");
})(System, System);