{"version":3,"sources":["commons/securedComponent.js"],"names":[],"mappings":";;;wDAKM,gBAAgB;;;;;;;6CAHd,KAAK;;qDACL,WAAW;;;AAEb,4BAAgB,GAEP,SAFT,gBAAgB,GAEJ;kDAFZ,gBAAgB;;AAGd,oBAAI,CAAC,WAAW,EAAE,CAAC,eAAe,EAAE,EAAC;AACjC,yBAAK,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;iBAC3B,MAAM;AACH,wBAAG,CAAC,aAAa,EAAE,CAAC,WAAW,EAAE,EAAC;AAC9B,qCAAa,EAAE,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,YAAU;AAChE,yCAAa,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;yBACtC,CAAC,CAAC;qBACN;iBAGJ;aACJ;;+BAIU,gBAAgB","file":"../../commons/securedComponent.js","sourcesContent":["import authService from '/commons/authService';\nimport socketService from '/commons/socketService';\nimport {state} from \"/commons/externalServices\";\nimport {LOGIN_STATE} from \"/commons/componentConstants\";\n\nclass SecuredComponent {\n\n    constructor() {\n        if (!authService().isAuthenticated()){\n            state().go(LOGIN_STATE);\n        } else {\n            if(!socketService().isConnected()){\n                socketService().connect(authService().getUsername()).then(function(){\n                    socketService().setConnected(true);\n                });\n            }\n\n\n        }\n    }\n\n}\n\nexport default SecuredComponent;"],"sourceRoot":"/"}