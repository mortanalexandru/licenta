{"version":3,"sources":["chatRoom/chatRoom.js"],"names":[],"mappings":";;;0GAaM,QAAQ;;;sCAbN,SAAS;mCAAE,MAAM;oCAAE,OAAO;;;;yCAE1B,CAAC;8CAAE,MAAM;2CAAE,GAAG;6CAAE,KAAK;;;;;;;;;AAWvB,oBAAQ;AAEC,yBAFT,QAAQ,CAEE,MAAM,EAAE,YAAY,EAAE;;;AAC9B,wBAAI,CAAC,aAAa,GAAG,EAAC,YAAY,EAAE,CAAC,EAAC,KAAK,EAAE,8BAA8B,EAAC,CAAC,EAAC,CAAC;AAC/E,wBAAI,CAAC,KAAK,GAAG,MAAM,CAAC;AACpB,wBAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;AACxB,wBAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,QAAQ,IAAI,SAAS,CAAC;AACnD,wBAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;AAC5C,wBAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAChB,wBAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;AACtB,wBAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAClB,wBAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,wBAAI,CAAC,YAAY,GAAG,EAAE,CAAC;AACvB,wBAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;AACzB,wBAAI,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC,CAAC;AAC5B,wBAAI,CAAC,KAAK,CAAC,aAAa,GAAG,EAAE,CAAC;;AAE9B,wBAAG,CAAC,IAAI,CAAC,UAAU,EAAC;AAChB,4BAAI,CAAC,yBAAyB,EAAE,CAAC;qBACpC;;;AAGD,wBAAI,WAAW,EAAE,CAAC,WAAW,EAAE,EAAE;AAC7B,4BAAI,CAAC,QAAQ,GAAG,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC;qBAC/C,MAAM;AACH,4BAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AACnC,4BAAI,CAAC,KAAK,GAAG,IAAI,CAAC;qBACrB;AACD,6BAAS;AACT,wBAAG,IAAI,CAAC,UAAU,EAAC;AACf,4BAAI,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;AAChD,4BAAG,QAAQ,IAAI,IAAI,EAAC;AAChB,gCAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACzB,gCAAI,CAAC,KAAK,GAAG,KAAK,CAAC;yBACtB;qBACJ;;AAED,iCAAa,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;iBAExF;;yCAvCC,QAAQ;;2BA0Ce,qCAAG;AACxB,4BAAI,CAAC,KAAK,CAAC,GAAG,CAAC,mBAAmB,EAAE,CAAA,UAAU,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE;AACzF,yCAAa,EAAE,CAAC,UAAU,EAAE,CAAC;AAC7B,mCAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;yBACrC,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;qBACjB;;;2BAEO,oBAAG;AACP,4BAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACrD,4BAAI,IAAI,CAAC,KAAK,EAAE;AACZ,gCAAI,CAAC,QAAQ,EAAE,CAAC;yBACnB,MAAM;AACH,gCAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;yBACjE;qBACJ;;;2BAGc,yBAAC,OAAO,EAAE;AACrB,+BAAO,aAAa,EAAE,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;qBAC1E;;;2BAEO,oBAAG;AACP,4BAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACzD,qCAAa,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE;AACnC,gCAAI,EAAE,MAAM;AACZ,oCAAQ,EAAE,IAAI,CAAC,QAAQ;AACvB,gCAAI,EAAE,IAAI,CAAC,QAAQ;AACnB,iCAAK,EAAE,IAAI,CAAC,KAAK;yBACpB,CAAC,CAAC;qBACN;;;2BAEa,0BAAG;AACb,+BAAO,MAAM,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC;AAChD,iCAAK,EAAE,EAAC,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAC,EAAE,KAAK,EAAE,KAAK;yBACjD,CAAC,CAAC;qBACN;;;2BAEgB,2BAAC,MAAM,EAAE;AACtB,4BAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC;AAChC,4BAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;AACnG,4BAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;AAC1B,4BAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;AACpB,4BAAI,CAAC,QAAQ,EAAE,CAAC;qBACnB;;;2BAEwB,mCAAC,IAAI,EAAE;AAC5B,4BAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;AAC3B,gCAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;yBAC9F;qBACJ;;;2BAEkB,6BAAC,OAAO,EAAE;AACzB,+BAAO,aAAa,EAAE,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;qBACvF;;;2BAEiB,4BAAC,IAAI,EAAE;;;AACrB,4BAAI,IAAI,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACrD,4BAAI,cAAc,GAAG,IAAI,qBAAqB,EAAE,CAAC;AACjD,sCAAc,CAAC,IAAI,GAAG,OAAO,CAAC;AAC9B,sCAAc,CAAC,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC;AACzC,4BAAI,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;AAC1C,4BAAI,IAAI,CAAC,iBAAiB,EAAE;AACxB,gCAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAA;yBACzC;AACD,4BAAI,CAAC,WAAW,GAAG,CAAA,UAAU,CAAC,EAAE;AAC5B,gCAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAA;yBAC5C,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACb,4BAAI,CAAC,0BAA0B,GAAG,CAAA,UAAU,CAAC,EAAE;AAC3C,gCAAI,CAAC,2BAA2B,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAA;yBACrD,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACb,4BAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;AACjC,4BAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;;AAElE,4BAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAE5C,4BAAI,CAAC,YAAY,EAAE,CACd,IAAI,CAAC,UAAA,MAAM;mCAAI,MAAK,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC;yBAAA,CAAC,CAAC;AAC5D,4BAAI,CAAC,cAAc,GAAG,CAAA,UAAU,KAAK,EAAE;AACnC,gCAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAA;yBACpD,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;qBACf;;;2BAE0B,qCAAC,CAAC,EAAE,QAAQ,EAAE;AACrC,4BAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,kBAAkB,IAAI,cAAc,EAAE;AACnF,mCAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACpC,gCAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;AACpB,gCAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;yBAC7B;qBACJ;;;2BAES,oBAAC,IAAI,EAAE,QAAQ,EAAE;AACvB,4BAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;AAC/C,qCAAa,EAAE,CAAC,IAAI,CAAC,qBAAqB,EAAE;AACxC,oCAAQ,EAAE,IAAI,CAAC,QAAQ;AACvB,gCAAI,EAAE,QAAQ;AACd,0CAAc,EAAE,IAAI,CAAC,GAAG;AACxB,gCAAI,EAAE,IAAI,CAAC,QAAQ;AACnB,wCAAY,EAAE,QAAQ;yBACzB,CAAC,CAAC;qBACN;;;2BAEiB,4BAAC,QAAQ,EAAE;AACzB,4BAAI,IAAI,GAAG,IAAI,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACrD,4BAAI,IAAI,CAAC,iBAAiB,EAAE;AACxB,gCAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAA;yBACzC;AACD,4BAAI,CAAC,WAAW,GAAG,CAAA,UAAU,CAAC,EAAE;AAC5B,gCAAI,CAAC,kBAAkB,CAAC,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAA;yBAChD,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACb,4BAAI,CAAC,0BAA0B,GAAG,CAAA,UAAU,CAAC,EAAE;AAC3C,gCAAI,CAAC,2BAA2B,CAAC,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAA;yBACzD,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACb,4BAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;;AAErC,4BAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;;;AAGhD,4BAAI,CAAC,WAAW,CAAC,CAAA,UAAU,KAAK,EAAE;AAC9B,gCAAI,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;yBAC5C,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,YAAY;AACtB,mCAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;yBACxD,CAAC,CAAA;qBACL;;;2BAGgB,2BAAC,IAAI,EAAE,QAAQ,EAAE;AAC9B,4BAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;AACjC,4BAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;AACzE,4BAAI,CAAC,aAAa,GAAG,CAAA,UAAU,KAAK,EAAE;AAClC,gCAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,cAAc,GAAG,KAAK,CAAC,OAAO,CAAC;AAC3D,gCAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,SAAS,GAAG,CAAA,UAAU,KAAK,EAAE;AACpE,oCAAI,CAAC,yBAAyB,CAAC,QAAQ,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;6BACxD,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBAChB,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBAChB;;;2BAEwB,mCAAC,QAAQ,EAAE,OAAO,EAAE;AACzC,+BAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC9B,4BAAG,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,KAAK,EAAE;AACjC,gCAAG,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,EAAE,CAAC,EAAC;AAClE,oCAAG,OAAO,CAAC,SAAS,EAAC;AACjB,4CAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;iCAC/B;AACD,oCAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,EAAC,CAAC,CAAC;AAClG,oCAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;6BACvB;yBACJ;AACD,4BAAG,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,EAAC;AAC5B,mCAAO,CAAC,SAAS,GAAG,IAAI,CAAC;AACzB,gCAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;yBACpD;qBACJ;;;2BAEyB,oCAAC,EAAE,EAAC;AAC1B,6BAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;AAC3C,gCAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,EAAC;AAC/B,uCAAO,IAAI,CAAC;6BACf;yBACJ;AACD,+BAAO,KAAK,CAAC;qBAChB;;;2BAGQ,mBAAC,IAAI,EAAE,QAAQ,EAAE;AACtB,4BAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;AAC/C,qCAAa,EAAE,CAAC,IAAI,CAAC,qBAAqB,EAAE;AACxC,oCAAQ,EAAE,IAAI,CAAC,QAAQ;AACvB,gCAAI,EAAE,OAAO;AACb,0CAAc,EAAE,IAAI,CAAC,GAAG;AACxB,gCAAI,EAAE,IAAI,CAAC,QAAQ;AACnB,wCAAY,EAAE,QAAQ;yBACzB,CAAC,CAAC;qBACN;;;2BAEiB,4BAAC,CAAC,EAAE,QAAQ,EAAE;AAC5B,4BAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjB,4BAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AAChG,4BAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;AAC1B,4BAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;qBACvB;;;2BAGc,yBAAC,QAAQ,EAAE;AACtB,+BAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACpC,4BAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;AACpB,4BAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;qBAC7B;;;2BAES,oBAAC,IAAI,EAAE;AACb,4BAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC3C,4BAAI,KAAK,IAAI,CAAC,EAAE;AACZ,gCAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;yBACrC;AACD,+BAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACxB,+BAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AAC/B,4BAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;qBACvB;;;2BAEM,iBAAC,IAAI,EAAE;AACV,4BAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,EAAE;AAC7D,gCAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5B,gCAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;yBACvB;qBACJ;;;2BAEmB,8BAAC,IAAI,EAAE;AACvB,+BAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AAC1B,4BAAI,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC;AAC9B,+BAAO,CAAC,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;AAC1B,4BAAI,cAAc,GAAG,IAAI,qBAAqB,EAAE,CAAC;AACjD,sCAAc,CAAC,IAAI,GAAG,QAAQ,CAAC;AAC/B,sCAAc,CAAC,GAAG,GAAG,GAAG,CAAC;AACzB,4BAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAA;AAC9D,4BAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,cAAc,GAAG,CAAA,UAAU,KAAK,EAAE;AACxD,gCAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAA;yBACpD,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;qBAChB;;;2BAEqB,gCAAC,KAAK,EAAE,QAAQ,EAAE;AACpC,4BAAI,KAAK,CAAC,SAAS,EAAE;AACjB,yCAAa,EAAE,CAAC,IAAI,CAAC,eAAe,EAAE;AAClC,oCAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,CAChD,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,YAAY,EAAE,QAAQ;6BAC/E,CAAC,CAAC;yBACN;qBACJ;;;2BAEW,sBAAC,QAAQ,EAAE;AACnB,qCAAa,EAAE,CAAC,IAAI,CAAC,qBAAqB,EAAE;AACxC,gCAAI,EAAE,cAAc;AACpB,oCAAQ,EAAE,IAAI,CAAC,QAAQ;AACvB,0CAAc,EAAE,IAAI;AACpB,gCAAI,EAAE,IAAI,CAAC,QAAQ;AACnB,wCAAY,EAAE,QAAQ;yBACzB,CAAC,CAAC;qBACN;;;2BAEe,0BAAC,IAAI,EAAE;AACnB,4BAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AAC3B,gCAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;yBACpC;AACD,4BAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AAC1B,gCAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;yBACjC;AACD,4BAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBAC/B;;;2BAEa,wBAAC,IAAI,EAAE;AACjB,4BAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,gCAAQ,IAAI,CAAC,IAAI;AACb,iCAAK,OAAO;AACR,oCAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC5B,oCAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;AAC9B,sCAAM;AAAA,AACV,iCAAK,MAAM;AACP,oCAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,EAAE;AAChC,wCAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;iCAC/B,MAAM;AACH,wCAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;iCACzB;AACD,sCAAM;AAAA,AACV,iCAAK,KAAK;AACN,oCAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;AACrC,sCAAM;AAAA,AACV,iCAAK,QAAQ;AACT,oCAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC5B,oCAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;AAChC,sCAAM;AAAA,AACV,iCAAK,cAAc;AACf,oCAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC5B,oCAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAA;AAC7B,sCAAM;AAAA,AACV,iCAAK,UAAU;AACX,oCAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpC,sCAAM;AAAA,AACV,iCAAK,YAAY;AACb,oCAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC5B,sCAAM;AAAA,AACV,iCAAK,aAAa;AACd,qCAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC9C,wCAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;iCACrC;AACD,sCAAM;AAAA,yBACb;qBACJ;;;2BAEU,uBAAG;AACV,4BAAI,IAAI,GAAG,EAAE,CAAC;AACd,4BAAI,QAAQ,GAAG,gEAAgE,CAAC;AAChF,6BAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACxB,gCAAI,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;yBACxE;AACD,+BAAO,OAAO,GAAG,IAAI,CAAC;qBACzB;;;2BAEU,qBAAC,OAAO,EAAE,SAAS,EAAE,eAAe,EAAE;AAC7C,4BAAI,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AAC5B,6BAAK,IAAI,GAAG,IAAI,IAAI,CAAC,YAAY,EAAE;AAC/B,gCAAI,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,SAAS;AACrD,gCAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;AAC3C,gCAAG,CAAC,SAAS,EAAC;AACV,oCAAI,GAAG,IAAI,CAAC,SAAS,CAAC,EAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAC,CAAC,CAAC;6BACnH;AACD,gCAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBACjD;AACD,4BAAG,CAAC,SAAS,EAAC;AACV,gCAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,EAAE,EAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;AACrF,gCAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;yBAC3B;qBACJ;;;2BAES,sBAAE;AACR,4BAAG,IAAI,CAAC,KAAK,CAAC,aAAa,IAAI,EAAE,EAAC;AAC9B,gCAAI,CAAC,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC;yBACrC,MAAI;AACD,gCAAI,CAAC,KAAK,CAAC,aAAa,GAAG,EAAE,CAAC;yBACjC;qBACJ;;;2BAEc,yBAAC,IAAI,EAAE,GAAG,EAAE;AACvB,4BAAI,CAAC,GAAG,EAAE,GAAG,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC;AACvC,4BAAI,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;AACvC,4BAAI,KAAK,GAAG,IAAI,MAAM,CAAC,MAAM,GAAG,IAAI,GAAG,mBAAmB,CAAC;4BACvD,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC9B,4BAAI,CAAC,OAAO,EAAE,OAAO,IAAI,CAAC;AAC1B,4BAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC;AAC3B,+BAAO,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;qBAC7D;;gCAjXC,QAAQ;AAAR,wBAAQ,GADb,MAAM,CAAC,QAAQ,EAAE,cAAc,CAAC,CAC3B,QAAQ,KAAR,QAAQ;AAAR,wBAAQ,GALb,SAAS,CAAC;AACP,4BAAQ,EAAE,UAAU;AACpB,4BAAQ,EAAE,QAAQ;iBACrB,CAAC,CAEI,QAAQ,KAAR,QAAQ;uBAAR,QAAQ;;;+BAsXC,QAAQ","file":"../../chatRoom/chatRoom.js","sourcesContent":["import {Component, Inject, Secured} from '../ngDecorators';\nimport template from './chatRoom.html!text';\nimport {q, window, sce, state} from \"../commons/externalServices\";\nimport socketService from '../commons/socketService';\nimport authService from '../commons/authService';\nimport adapter from \"webrtc-adapter\";\nimport './chatRoom.css!';\n\n@Component({\n    selector: 'chatroom',\n    template: template\n})\n@Inject('$scope', '$stateParams')\nclass ChatRoom {\n\n    constructor($scope, $stateParams) {\n        this.configuration = {\"iceServers\": [{\"url\": \"stun:stun.l.google.com:19302\"}]};\n        this.scope = $scope;\n        this.scope.streams = {};\n        this.roomName = $stateParams.roomName || \"default\";\n        this.scope.roomName = $stateParams.roomName;\n        this.peers = {};\n        this.scope.users = [];\n        this.host = false;\n        this.guest = false;\n        this.dataChannels = {};\n        this.scope.messages = [];\n        this.scope.streamNumber = 0;\n        this.scope.chatOpenClass = \"\";\n\n        if(!this.standalone){\n            this.handleLeavePageDisconnect();\n        }\n\n        //determine if guest or not\n        if (authService().getUsername()) {\n            this.username = authService().getUsername();\n        } else {\n            this.username = this.getRandomId();\n            this.guest = true;\n        }\n        debugger;\n        if(this.standalone){\n            let username = this.getUrlParameter(\"username\");\n            if(username != null){\n                this.username = username;\n                this.guest = false;\n            }\n        }\n\n        socketService().connect(this.username, this.roomName).then(this.initUser.bind(this));\n\n    }\n\n\n    handleLeavePageDisconnect() {\n        this.scope.$on('$stateChangeStart', function (event, newState, newParam, oldState, oldParam) {\n            socketService().disconnect();\n            console.log(\"Disconected socket\");\n        }.bind(this));\n    }\n\n    initUser() {\n        this.subscribeToRoom(this.messageHandler.bind(this));\n        if (this.guest) {\n            this.joinRoom();\n        } else {\n            this.getLocalStream().then(this.handleLocalStream.bind(this));\n        }\n    }\n\n\n    subscribeToRoom(handler) {\n        return socketService().subscribe(\"/message/\" + this.roomName, handler);\n    }\n\n    joinRoom() {\n        this.subscribeToUsername(this.messageHandler.bind(this));\n        socketService().send(\"/app/chat/join\", {\n            type: \"join\",\n            username: this.username,\n            room: this.roomName,\n            guest: this.guest\n        });\n    }\n\n    getLocalStream() {\n        return window().navigator.mediaDevices.getUserMedia({\n            video: {width: 500, height: 500}, audio: false\n        });\n    }\n\n    handleLocalStream(stream) {\n        this.localStreamObject = stream;\n        this.scope.streams[this.username] = sce().trustAsResourceUrl(window().URL.createObjectURL(stream));\n        this.scope.streamNumber++;\n        this.scope.$apply();\n        this.joinRoom();\n    }\n\n    handleReceiveIceCandidate(data) {\n        if (this.peers[data.username]) {\n            this.peers[data.username].addIceCandidate(new RTCIceCandidate(JSON.parse(data.candidate)));\n        }\n    }\n\n    subscribeToUsername(handler) {\n        return socketService().subscribe(\"/message/\" + this.username, handler, \"handshake\");\n    }\n\n    handleReceiveOffer(data) {\n        let peer = new RTCPeerConnection(this.configuration);\n        let rtcSessionDesc = new RTCSessionDescription();\n        rtcSessionDesc.type = \"offer\";\n        rtcSessionDesc.sdp = data.sdpDescription;\n        peer.setRemoteDescription(rtcSessionDesc);\n        if (this.localStreamObject) {\n            peer.addStream(this.localStreamObject)\n        }\n        peer.onaddstream = function (e) {\n            this.handleRemoteStream(e, data.username)\n        }.bind(this);\n        peer.oniceconnectionstatechange = function (e) {\n            this.handlerIceConnectionChanged(e, data.username)\n        }.bind(this);\n        this.peers[data.username] = peer;\n        this.dataChannels[data.username] = peer.createDataChannel(\"chat\");\n\n        this.createDataChannel(peer, data.username);\n\n        peer.createAnswer()\n            .then(answer => this.sendAnswer(answer, data.username));\n        peer.onicecandidate = function (event) {\n            this.sendLocalIceCandidates(event, data.username)\n        }.bind(this)\n    }\n\n    handlerIceConnectionChanged(e, username) {\n        if (this.peers[username] && this.peers[username].iceConnectionState == 'disconnected') {\n            delete this.scope.streams[username];\n            this.scope.$apply();\n            this.removeUser(username);\n        }\n    }\n\n    sendAnswer(desc, username) {\n        this.peers[username].setLocalDescription(desc);\n        socketService().send(\"/app/chat/handshake\", {\n            username: this.username,\n            type: 'answer',\n            sdpDescription: desc.sdp,\n            room: this.roomName,\n            destUsername: username\n        });\n    }\n\n    createAndSendOffer(response) {\n        let peer = new RTCPeerConnection(this.configuration);\n        if (this.localStreamObject) {\n            peer.addStream(this.localStreamObject)\n        }\n        peer.onaddstream = function (e) {\n            this.handleRemoteStream(e, response.username)\n        }.bind(this);\n        peer.oniceconnectionstatechange = function (e) {\n            this.handlerIceConnectionChanged(e, response.username)\n        }.bind(this);\n        this.peers[response.username] = peer;\n\n        this.createDataChannel(peer, response.username);\n\n        // peer.createOffer().then(offer => this.sendOffer(offer, response.username));\n        peer.createOffer(function (offer) {\n            this.sendOffer(offer, response.username);\n        }.bind(this), function () {\n            console.log(\"there was an error creating the offer\");\n        })\n    }\n\n\n    createDataChannel(peer, username) {\n        this.dataChannels[username] = {};\n        this.dataChannels[username].sendChannel = peer.createDataChannel(\"chat\");\n        peer.ondatachannel = function (event) {\n            this.dataChannels[username].receiveChannel = event.channel;\n            this.dataChannels[username].receiveChannel.onmessage = function (event) {\n                this.handleChatMessageReceived(username, event.data);\n            }.bind(this);\n        }.bind(this);\n    }\n\n    handleChatMessageReceived(username, message) {\n        message = JSON.parse(message);\n        if(!message.broadcast || this.guest) {\n            if(!message.broadcast || !this.checkIfMessageAlreadyAdded(message.id)){\n                if(message.broadcast){\n                    username = message.username;\n                }\n                this.scope.messages.push({id: message.id, user: username, message: message.message, self: false});\n                this.scope.$apply();\n            }\n        }\n        if(message.guest && !this.guest){\n            message.broadcast = true;\n            this.sendMessage(message.message, true, message);\n        }\n    }\n\n    checkIfMessageAlreadyAdded(id){\n        for(let i=0; i<this.scope.messages.length; i++){\n            if(this.scope.messages[i].id == id){\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    sendOffer(desc, username) {\n        this.peers[username].setLocalDescription(desc);\n        socketService().send(\"/app/chat/handshake\", {\n            username: this.username,\n            type: 'offer',\n            sdpDescription: desc.sdp,\n            room: this.roomName,\n            destUsername: username\n        });\n    }\n\n    handleRemoteStream(e, username) {\n        this.host = true;\n        this.scope.streams[username] = sce().trustAsResourceUrl(window().URL.createObjectURL(e.stream));\n        this.scope.streamNumber++;\n        this.scope.$apply();\n    }\n\n\n    handlerUserLeft(username) {\n        delete this.scope.streams[username];\n        this.scope.$apply();\n        this.removeUser(username);\n    }\n\n    removeUser(user) {\n        var index = this.scope.users.indexOf(user);\n        if (index >= 0) {\n            this.scope.users.splice(index, 1);\n        }\n        delete this.peers[user];\n        delete this.dataChannels[user];\n        this.scope.$apply();\n    }\n\n    addUser(user) {\n        if (this.scope.users.indexOf(user) < 0 && this.username != user) {\n            this.scope.users.push(user);\n            this.scope.$apply();\n        }\n    }\n\n    handlerReceiveAnswer(data) {\n        console.log(\"got Answer\");\n        let sdp = data.sdpDescription;\n        console.log(\"sdp \" + sdp);\n        let rtcSessionDesc = new RTCSessionDescription();\n        rtcSessionDesc.type = \"answer\";\n        rtcSessionDesc.sdp = sdp;\n        this.peers[data.username].setRemoteDescription(rtcSessionDesc)\n        this.peers[data.username].onicecandidate = function (event) {\n            this.sendLocalIceCandidates(event, data.username)\n        }.bind(this);\n    }\n\n    sendLocalIceCandidates(event, username) {\n        if (event.candidate) {\n            socketService().send(\"/app/chat/ice\", {\n                type: \"ice\", username: this.username, candidate: JSON\n                    .stringify(event.candidate), room: this.roomName, destUsername: username\n            });\n        }\n    }\n\n    requestOffer(username) {\n        socketService().send(\"/app/chat/handshake\", {\n            type: \"requestOffer\",\n            username: this.username,\n            sdpDescription: null,\n            room: this.roomName,\n            destUsername: username\n        });\n    }\n\n    handleUserJoined(data) {\n        if (this.guest && !data.guest) {\n            this.requestOffer(data.username);\n        }\n        if (this.host && !this.guest) {\n            this.createAndSendOffer(data);\n        }\n        this.addUser(data.username);\n    }\n\n    messageHandler(data) {\n        data = JSON.parse(data.body);\n        switch (data.type) {\n            case \"offer\":\n                this.addUser(data.username);\n                this.handleReceiveOffer(data);\n                break;\n            case \"join\":\n                if (data.username != this.username) {\n                    this.handleUserJoined(data);\n                } else {\n                    this.host = data.host;\n                }\n                break;\n            case \"ice\":\n                this.handleReceiveIceCandidate(data);\n                break;\n            case \"answer\":\n                this.addUser(data.username);\n                this.handlerReceiveAnswer(data);\n                break;\n            case \"requestOffer\":\n                this.addUser(data.username);\n                this.createAndSendOffer(data)\n                break;\n            case \"userLeft\":\n                this.handlerUserLeft(data.username);\n                break;\n            case \"userJoined\":\n                this.addUser(data.username);\n                break;\n            case \"onlineUsers\":\n                for (let i = 0; i < data.onlineUsers.length; i++) {\n                    this.addUser(data.onlineUsers[i]);\n                }\n                break;\n        }\n    }\n\n    getRandomId() {\n        let text = \"\";\n        let possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (var i = 0; i < 5; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return \"guest\" + text;\n    }\n\n    sendMessage(message, broadcast, originalMessage) {\n        let id = this.getRandomId();\n        for (let key in this.dataChannels) {\n            if (!this.dataChannels.hasOwnProperty(key)) continue;\n            let json = JSON.stringify(originalMessage);\n            if(!broadcast){\n                json = JSON.stringify({id: id, guest: this.guest, broadcast: false, message: message, username: this.username});\n            }\n            this.dataChannels[key].sendChannel.send(json);\n        }\n        if(!broadcast){\n            this.scope.messages.push({id: id,user: this.username, message: message, self: true});\n            this.scope.message = \"\";\n        }\n    }\n\n    toggleChat(){\n        if(this.scope.chatOpenClass == \"\"){\n            this.scope.chatOpenClass = \"open\";\n        }else{\n            this.scope.chatOpenClass = \"\";\n        }\n    }\n\n    getUrlParameter(name, url) {\n        if (!url) url = window().location.href;\n        name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n        var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n            results = regex.exec(url);\n        if (!results) return null;\n        if (!results[2]) return '';\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n    }\n\n\n}\n\nexport default ChatRoom;"],"sourceRoot":"/"}