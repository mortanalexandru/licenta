{"version":3,"sources":["chatRoom/chatRoom.js"],"names":[],"mappings":"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","file":"../../chatRoom/chatRoom.js","sourcesContent":["import {Component, Inject, Secured} from '../ngDecorators';\nimport template from './chatRoom.html!text';\nimport {q, window, sce, state} from \"../commons/externalServices\";\nimport socketService from '../commons/socketService';\nimport authService from '../commons/authService';\nimport adapter from \"webrtc-adapter\";\nimport './chatRoom.css!';\n\n@Component({\n    selector: 'chatroom',\n    template: template\n})\n@Inject('$scope', '$stateParams')\nclass ChatRoom{\n\n    constructor($scope, $stateParams) {\n        this.scope = $scope;\n        this.scope.streams = {};\n        this.roomName = $stateParams.roomName;\n        this.scope.roomName = $stateParams.roomName;\n        this.peers = {};\n        this.scope.users = [];\n        this.host = false;\n        this.guest = false;\n        this.dataChannels = {};\n        this.scope.messages = [];\n\n\n        this.handleLeavePageDisconnect();\n\n        //determine if guest or not\n        if(authService().getUsername()){\n            this.username = authService().getUsername();\n        }else{\n            this.username= this.getRandomId();\n            this.guest = true;\n        }\n\n        socketService().connect(this.username, this.roomName).then(this.initUser.bind(this));\n\n    }\n\n\n    handleLeavePageDisconnect(){\n        this.scope.$on('$stateChangeStart', function( event, newState, newParam, oldState, oldParam ) {\n                socketService().disconnect();\n                console.log(\"Disconected socket\");\n        }.bind(this));\n    }\n\n    initUser(){\n        this.subscribeToRoom(this.messageHandler.bind(this));\n        if(this.guest){\n            this.joinRoom();\n        }else{\n            this.getLocalStream().then(this.handleLocalStream.bind(this));\n        }\n    }\n\n\n    subscribeToRoom(handler){\n        return socketService().subscribe(\"/message/\"+this.roomName, handler);\n    }\n\n    joinRoom(){\n        this.subscribeToUsername(this.messageHandler.bind(this));\n        socketService().send(\"/app/chat/join\",{type:\"join\", username:this.username, room: this.roomName, guest: this.guest});\n    }\n\n    getLocalStream(){\n        return window().navigator.mediaDevices.getUserMedia({video:true, audio:false});\n    }\n\n    handleLocalStream(stream) {\n        this.localStreamObject = stream;\n        this.scope.streams[this.username] = sce().trustAsResourceUrl(window().URL.createObjectURL(stream));\n        this.scope.$apply();\n        this.joinRoom();\n    }\n\n    handleReceiveIceCandidate(data){\n        if(this.peers[data.username]){\n            this.peers[data.username].addIceCandidate(new RTCIceCandidate(JSON.parse(data.candidate)));\n        }\n    }\n\n    subscribeToUsername(handler){\n        return socketService().subscribe(\"/message/\"+this.username, handler, \"handshake\");\n    }\n\n    handleReceiveOffer(data){\n        let peer = new RTCPeerConnection(this.configuration);\n        let rtcSessionDesc = new RTCSessionDescription();\n        rtcSessionDesc.type = \"offer\";\n        rtcSessionDesc.sdp = data.sdpDescription;\n        peer.setRemoteDescription(rtcSessionDesc);\n        if(this.localStreamObject){\n            peer.addStream(this.localStreamObject)\n        }\n        peer.onaddstream = function(e){this.handleRemoteStream(e, data.username)}.bind(this);\n        peer.oniceconnectionstatechange = function(e){this.handlerIceConnectionChanged(e, data.username)}.bind(this);\n        this.peers[data.username] = peer;\n        this.dataChannels[data.username] = peer.createDataChannel(\"chat\");\n\n        this.createDataChannel(peer, data.username);\n\n        peer.createAnswer()\n            .then(answer => this.sendAnswer(answer, data.username));\n        peer.onicecandidate = function(event){this.sendLocalIceCandidates(event, data.username)}.bind(this)\n    }\n\n    handlerIceConnectionChanged(e, username){\n        if(this.peers[username].iceConnectionState == 'disconnected') {\n            delete this.scope.streams[username];\n            this.scope.$apply();\n            this.removeUser(username);\n        }\n    }\n\n    sendAnswer(desc, username){\n        this.peers[username].setLocalDescription(desc);\n        socketService().send(\"/app/chat/handshake\", {username:this.username, type: 'answer', sdpDescription:desc.sdp, room: this.roomName, destUsername: username});\n    }\n\n    createAndSendOffer(response) {\n            let peer = new RTCPeerConnection(this.configuration);\n            if(this.localStreamObject) {\n                peer.addStream(this.localStreamObject)\n            }\n            peer.onaddstream = function(e){this.handleRemoteStream(e, response.username)}.bind(this);\n            peer.oniceconnectionstatechange = function(e){this.handlerIceConnectionChanged(e, response.username)}.bind(this);\n            this.peers[response.username] = peer;\n\n            this.createDataChannel(peer, response.username);\n\n           // peer.createOffer().then(offer => this.sendOffer(offer, response.username));\n            peer.createOffer(function(offer){\n                this.sendOffer(offer, response.username);\n            }.bind(this), function(){\n                console.log(\"there was an error creating the offer\");\n            })\n    }\n\n\n    createDataChannel(peer, username){\n        this.dataChannels[username] = {};\n        this.dataChannels[username].sendChannel = peer.createDataChannel(\"chat\");\n        peer.ondatachannel = function(event){\n            this.dataChannels[username].receiveChannel =event.channel;\n            this.dataChannels[username].receiveChannel.onmessage = function (event) {\n                this.handleChatMessageReceived(username, event.data);\n            }.bind(this);\n        }.bind(this);\n    }\n\n    handleChatMessageReceived(username, message){\n        this.scope.messages.push({user: username, message: message, self: false});\n        this.scope.$apply();\n    }\n\n\n    sendOffer(desc, username){\n        this.peers[username].setLocalDescription(desc);\n        socketService().send(\"/app/chat/handshake\", {username:this.username, type: 'offer', sdpDescription:desc.sdp, room: this.roomName, destUsername: username});\n    }\n\n    handleRemoteStream(e, username) {\n        this.host = true;\n        this.scope.streams[username] = sce().trustAsResourceUrl(window().URL.createObjectURL(e.stream));\n        this.scope.$apply();\n    }\n\n\n    handlerUserLeft(username){\n        delete this.scope.streams[username];\n        this.scope.$apply();\n        this.removeUser(username);\n    }\n\n    removeUser(user){\n        var index = this.scope.users.indexOf(user);\n        if (index >= 0) {\n            this.scope.users.splice( index, 1 );\n        }\n        this.scope.$apply();\n    }\n\n    addUser(user){\n        if(this.scope.users.indexOf(user) < 0 && this.username != user){\n            this.scope.users.push(user);\n            this.scope.$apply();\n        }\n    }\n\n    handlerReceiveAnswer(data){\n        console.log(\"got Answer\");\n        let sdp = data.sdpDescription;\n        console.log(\"sdp \"+sdp);\n        let rtcSessionDesc = new RTCSessionDescription();\n        rtcSessionDesc.type = \"answer\";\n        rtcSessionDesc.sdp = sdp;\n        this.peers[data.username].setRemoteDescription(rtcSessionDesc)\n        this.peers[data.username].onicecandidate = function(event){this.sendLocalIceCandidates(event, data.username)}.bind(this);\n    }\n\n    sendLocalIceCandidates(event, username){\n        if (event.candidate) {\n            socketService().send(\"/app/chat/ice\", {type:\"ice\", username:this.username, candidate:JSON\n                .stringify(event.candidate), room: this.roomName, destUsername: username});\n        }\n    }\n\n    requestOffer(username){\n        socketService().send(\"/app/chat/handshake\",{type:\"requestOffer\", username:this.username, sdpDescription:null, room: this.roomName, destUsername: username});\n    }\n\n    handleUserJoined(data){\n        if(this.guest && !data.guest){\n            this.requestOffer(data.username);\n        }\n        if (this.host && !this.guest) {\n            this.createAndSendOffer(data);\n        }\n        this.addUser(data.username);\n    }\n\n    messageHandler(data){\n        data = JSON.parse(data.body);\n        switch (data.type) {\n            case \"offer\":\n                this.addUser(data.username);\n                this.handleReceiveOffer(data);\n                break;\n            case \"join\":\n                if (data.username != this.username){\n                    this.handleUserJoined(data);\n                }else{\n                    this.host = data.host;\n                }\n                break;\n            case \"ice\":\n                this.handleReceiveIceCandidate(data);\n                break;\n            case \"answer\":\n                this.addUser(data.username);\n                this.handlerReceiveAnswer(data);\n                break;\n            case \"requestOffer\":\n                this.addUser(data.username);\n                this.createAndSendOffer(data)\n                break;\n            case \"userLeft\":\n                this.handlerUserLeft(data.username);\n                break;\n            case \"userJoined\":\n                this.addUser(data.username);\n                break;\n            case \"onlineUsers\":\n                for(let i=0; i<data.onlineUsers.length; i++){\n                    this.addUser(data.onlineUsers[i]);\n                }\n                break;\n        }\n    }\n\n    getRandomId(){\n            let text = \"\";\n            let possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n            for( var i=0; i < 5; i++ ) {\n                text += possible.charAt(Math.floor(Math.random() * possible.length));\n            }\n            return \"guest\"+text;\n        }\n\n    sendMessage(message){\n        for (let key in this.dataChannels) {\n            if (!this.dataChannels.hasOwnProperty(key)) continue;\n            this.dataChannels[key].sendChannel.send(message);\n        }\n        this.scope.messages.push({user: this.username, message: message, self: true});\n        this.scope.message = \"\";\n    }\n\n}\n\nexport default ChatRoom;"],"sourceRoot":"/"}